# This is an example Makefile for a clock program.
# Typing 'make' or 'make clock' will create the executable file.
#

# define some Makefile variables for the compiler and compiler flags
# to use Makefile variables later in the Makefile: $()
#
#  -g    adds debugging information to the executable file
#  -Wall turns on most, but not all, compiler warnings
#
# for C++ define  CC = g++
CC = g++
CFLAGS  = -g -Wall

# typing 'make' will invoke the first target entry in the file
# (in this case the default target entry)
# you can name this target entry anything, but "default" or "all"
# are the most commonly used names by convention
#
default: clock

# To create the executable file clock we need the object files
# clockTypeImp.o, main.o:
#
clock:  clockTypeImp.o main.o
	$(CC) $(CFLAGS) -o clock clockTypeImp.o main.o

# To create the object file clockTypeImp.o, we need the source
# files clockTypeImp.cpp, clockType.h:
#
clockTypeImp.o:  clockTypeImp.cpp clockType.h
	$(CC) $(CFLAGS) -c clockTypeImp.cpp

# To start over from scratch, type 'make clean'.  This
# removes the executable file, as well as old .o object
# files and *~ backup files:
#
clean:
	$(RM) clock *.o *~
